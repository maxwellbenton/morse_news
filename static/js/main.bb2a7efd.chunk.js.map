{"version":3,"sources":["App.js","logo.svg","reportWebVitals.js","index.js"],"names":["defaultMessage","dash","dot","morseTranslation","App","useState","split","splitMessageIntoWords","message","convertToMorse","convertedMessage","currentWordIndex","setCurrentWordIndex","currentPointIndex","setCurrentPointIndex","active","setActive","string","reduce","morseConversion","currentChar","conversion","toLowerCase","join","trim","wrapInSpans","arrayOfStrings","outputType","map","index","id","toString","useEffect","document","getElementById","play","oldIndex","querySelector","scrollTo","left","behavior","classList","add","className","onClick","interval","setInterval","console","log","clearInterval","prev","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bb2a7efd.chunk.js","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {useState, useEffect} from 'react';\n\nconst defaultMessage = \"a new test. This is a test. A longer test sentence. An even longer test sentence this is much longer hey how are you doing?. Reallylongwordtestoverhere!\"\n\nconst dash = \"-\"\nconst dot = \"â€¢\"\nconst pause = \"_\"\nconst end = \"/\"\n\nconst morseTranslation = {\n  \"a\": [dot, dash],\n  \"b\": [dash, dot, dot, dot],\n  \"c\": [dash, dot, dash, dot],\n  \"d\": [dash, dot, dot],\n  \"e\": [dot],\n  \"f\": [dot, dot, dash, dot], \n  \"g\": [dash, dash, dot],\n  \"h\": [dot, dot, dot, dot],\n  \"i\": [dot, dot],\n  \"j\": [dot, dash, dash, dash],\n  \"k\": [dash, dot, dash],\n  \"l\": [dot, dash, dot, dot],\n  \"m\": [dash, dash],\n  \"n\": [dash, dot],\n  \"o\": [dash, dash, dash],\n  \"p\": [dot, dash, dash, dot],\n  \"q\": [dash, dash, dot, dash],\n  \"r\": [dot, dash, dot],\n  \"s\": [dot, dot, dot],\n  \"t\": [dash],\n  \"u\": [dot, dot, dash],\n  \"v\": [dot, dot, dot, dash],\n  \"w\": [dot, dash, dash],\n  \"x\": [dash, dot, dot, dash],\n  \"y\": [dash, dot, dash, dash],\n  \"z\": [dash, dash, dot, dot],\n  \" \": [pause],\n  \".\": [dot, dash, dot, dash, dot, dot],\n  \"?\": [dot, dot, dash, dash, dot, dot]\n}\n\nfunction splitMessageIntoWords(m = \"\") {\n  return m.split(' ')\n}\n\nfunction App() {\n  const [message, setMessage] = useState(splitMessageIntoWords(defaultMessage))\n  const [convertedMessage, setConvertedMessage] = useState(convertToMorse(defaultMessage))\n  const [currentWordIndex, setCurrentWordIndex] = useState(0)\n  const [currentPointIndex, setCurrentPointIndex] = useState(-1)\n  const [active, setActive] = useState(false)\n\n  useEffect(() => {\n    if (convertedMessage[currentPointIndex] === dot) document.getElementById('dot').play()\n    if (convertedMessage[currentPointIndex] === dash) document.getElementById('dash').play()\n    if (convertedMessage[currentPointIndex] === \"_\") {\n      setCurrentWordIndex(oldIndex => oldIndex + 1);\n    }\n  }, [currentPointIndex])\n\n  useEffect(() => {\n    document.querySelector(\".App\").scrollTo({\n      left: currentWordIndex*300,\n      behavior: 'smooth'\n    }) \n  }, [currentWordIndex])\n\n  useEffect(() => {\n    if (document.getElementById('point')) {\n      document.getElementById('point').classList.add('fade')\n    } \n  })\n\n  function convertToMorse(string) {\n    let a = string.split('').reduce((morseConversion, currentChar) => {\n      let conversion = morseTranslation[currentChar.toLowerCase()]\n      if (conversion) {\n        return morseConversion + conversion.join('') + \" \"\n      } else {\n        return morseConversion + \"\"\n      }\n    }, \"\").trim()\n    \n    return a\n  }\n\n  function wrapInSpans(arrayOfStrings, outputType) {\n    if (outputType === \"morse\") {\n      return arrayOfStrings.map((string, index) => {\n        string = convertToMorse(string)\n        if (index === currentWordIndex) {\n          return <span id={outputType+index.toString()} key={outputType+index.toString()}><b>{string}</b></span>\n        } else {\n          return <span id={outputType+index.toString()} key={outputType+index.toString()}>{string}</span>\n        }\n      })\n    } else {\n      return arrayOfStrings.map((string, index) => {\n        if (index === currentWordIndex) {\n          return <span id={outputType+index.toString()} key={outputType+index.toString()}><b>{string}</b></span>\n        } else {\n          return <span id={outputType+index.toString()} key={outputType+index.toString()}>{string}</span>\n        }\n      })\n    }\n  }  \n\n  function handleClick() {\n    let interval\n    if (active === false) {\n      interval = setInterval(() => {\n        setCurrentPointIndex(oldIndex => oldIndex + 1);\n      }, 350)\n    } else {\n      console.log('hi')\n      clearInterval(interval);\n      setCurrentPointIndex(-1);\n    }\n    setActive(prev => !prev)\n  }\n\n  function displayCurrentPoint() {\n    if (convertedMessage[currentPointIndex] === \"_\") {\n      return <span className=\"point\">{\" \"}</span>\n    } else {\n      return <span className=\"point\">{convertedMessage[currentPointIndex]}</span>\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"info\">\n        <button onClick={handleClick}>{active ? \"Stop\" : \"Start\"}</button>\n        <div className=\"pointDisplay\">{displayCurrentPoint()}</div>\n      </div>\n      <div className=\"morseOutput\">{wrapInSpans(message, \"morse\")}</div>\n      <div className=\"messageOutput\">{wrapInSpans(message, 'text')}</div>\n      <audio id=\"dash\">\n        <source src=\"https://raw.githubusercontent.com/maxwellbenton/morse_news/master/src/assets/dash.m4a\"></source>\n      </audio>\n      <audio id=\"dot\">\n        <source src=\"https://raw.githubusercontent.com/maxwellbenton/morse_news/master/src/assets/dot.m4a\"></source>\n      </audio>\n    </div>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}